add2 <- function(x,y){
x+y
}
add2(3,5)
above <- function(x, n){
use <- x > n
x[ use ]
}
x <- 1:20
n <- 12
above(x,n)
columnmean <- funciton(y){
nc <- ncol(y)
means <- nummeric(nc)
for(i in 1:nc){
means[i] <- mean(y[, i])
}
means
}
columnmean <- funciton(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[, i])
}
means
}
columnmean <- funciton(y){
nc <- ncol(y)
means <- nummeric(nc)
for(i in 1:nc){
means[i] <- mean(y[, i])
}
means
}
columnmean <- funciton(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[, i])
}
means
}
columnmean <- funciton(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[, i])
}
means
}
columnmean <- funciton(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[, i])
}
means
}
columnmean <- funciton(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[, i])
}
means
}
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[, i])
}
means
}
numeric(1)
numeric(23)
numeric(3)
numeric(3.4)
numeric(3.5)
numeric(3.6)
numeric(5)
ncol(5)
y <- c(1,2,4,5,7)
ncol(y)
q()
plot(x,y,"l",...)
plot(x, y, type="l", ...)
plot(x, y, type = "l", ...)
q()
cube <- function(x,n){
x^3
}
cube(3)
X<-1:10
X
if(X>5){
x<-0
}
f <- function(x) {
g <- function(y) {
y + Z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3){}
y <- if(x < 3) {
NA
} else {
10
}
y
install.packages("KernSmooth")
library(KernSmooth)
q()
clear()
clear
directory <- "specdata"
nobsV <- complete(directory)$nobs
source("complete.R")
setwd("~/Desktop/CSgod/R Lang/Programming Exercise/PA1")
source("complete.R")
nobsV <- complete(directory)$nobs
nrow(nobsV)
length(nobsV)
qualifyiedV <- nobsV > 0
length(qualifyied)
length(qualifyiedV)
nobsV
qualifyiedV
qualifiedV <- nobsV > threshold & nobsV > 0
threshold = 0
qualifiedV <- nobsV > threshold & nobsV > 0
qualifyiedV
threshold = 150
nobsV
qualifiedV <- nobsV > threshold & nobsV > 0
qualifiedV
qualifiedV <- nobsV >= threshold & nobsV > 0
nobsV <- nobsV[qualifiedV]
nobsV
length(nobsV)
complete(directory)$id[qualifiedV]
(a, b) <- c(1:20, 2:30)
a, b <- c(1:20, 2:30)
c(a, b) <- c(1:20, 2:30)
completeV <- complete(directory)
nobsV <- completeV$nobs
qualifiedV <- nobsV >= threshold & nobsV > 0
idV <- completeV$id[qualifiedV]
idV
cor(1:10, 2:11)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
cr <- corr("specdata", 150)
cr <- corr("specdata", 150)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
source("corr.R")
source("corr.R")
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
q()
